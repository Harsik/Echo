개발 2일차
repository를 작성하는 jparepository 혹은 crudrepository를
작성할때 @repository를 넣을 필요가 없다는 것이 기억났는데
이걸 어디서 봤는지는 전혀 기억나지 않는다. 찾을까 했는데 
귀찬아서 안 찾는다. orElseThrow(() -> new AppException("User Role not set."));
부분에서 에러가 생기는데 라이브러리는 찾아도 해결하지 못하는
이상한 현상이 생긴다. 원인을 좀 더 찾아봐야겠다.
Lombok의 Builder와 @ID, @CreationTimestamp 등이 호환이
안되는 것 같다. 자동 생성되는 것들을 뺀 생성자를 하나 
만들어야된다. AppException를 추가하지 않은 문제였다.
ApiRespronse를 생성하는데 오류가 발생한다. 생성자를 만들어주는
어노테이션인 @Builder를 믿고 생성자를 넣지 않았는데 생성자를
넣고 나니 잘되었다. @Builder쓰는 방법을 내가 잘못 안것 같다.
다시 찾아보니 @AllArgsConstructor를 사용하면 모든 인자를 사용하는
생성자를 만들어낸다고 한다. 이걸 생성자를 기입하는 대신 사용하니
정상적으로 처리가 됬다. 하지만 모든 인자를 사용하지 않는 경우거나
일부 인자만 사용하는 경우에는 직접 생성자를 만들어야한다.
작성하고 테스트 할려고 생각해보니 junit의 test 기능도 써봐야
겠다는 생각이 들었다. junit에 대해 자세히 알아보고 
적용해 보도록 하자. 
Error executing DDL 
"alter table db_example.account add column update datetime" 
via JDBC Statement 이 왜 뜰까 혹시 컬럼명이 update인게
문제인것 같아 변경하였더니 오류가 뜨지 않는다. 하지만
다음 오류가 떠서 날 괴롭힌다.
Error executing DDL 
"alter table user_roles add constraint 
FKn6rghlrxo1uta1ffpj0puglmp foreign key (user_id) references 
account (id)" via JDBC Statement
그리고 컬럼 명명식에 특이한 점이 있는지 createTimeStamp면 
대문자 앞에 _가 붙고 소문자가 되면서 create_time_stamp로
컬럼명이 변환되 버린다. 아닌듯 그냥 timestamp가 주어지는 컬럼명 같다.
새로생긴 오류는 외래키 부여과정에서 오류가 난것 같다. 외래키 문제는
해결 한 것 같은데 새로운 오류가 날 반긴다.
The web application [ROOT] appears to have started a thread named 
[HikariPool-1 connection adder] but has failed to stop it. 
This is very likely to create a memory leak.
뭔지 모르겠다 db 연결 관련 문제인가? 로그 위에 더 관련있어보이는 오류를 찾았다.
 Error starting Tomcat context. 
 Exception: org.springframework.beans.factory.UnsatisfiedDependencyException. 
 Message: Error creating bean with name 'webSecurityConfig': 
 Unsatisfied dependency expressed through field 'accountService'; 
 nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: 
 Error creating bean with name 'accountService': 
 Unsatisfied dependency expressed through field 'accountRepository'; 
 nested exception is org.springframework.beans.factory.BeanCreationException: 
 Error creating bean with name 'accountRepository': 
 Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: 
 Failed to create query for method public abstract 
 java.util.Optional echo.repository.AccountRepository.findByName(java.lang.String)! 
 No property name found for type Account!
 주요 오류는 
 echo.repository.AccountRepository.findByName (java.lang.String)! 계정 유형에 대한 속성 이름을 찾을 수 없습니다.
 'webSecurityConfig'라는 이름으로 빈을 생성하는 중 오류 발생 : 'accountService'필드를 통해 표현 된 충족되지 않은 종속성
 중첩 예외는 org.springframework.beans.factory.UnsatisfiedDependencyException : 'accountService'라는 이름으로 빈 생성 오류
 아 젠장 @repository문제인가 아니네 안사라진다
 Account 객체의 파라미터들을 간소화 시키면서 사라진 파라미터를 참조하고 있던 메소드들을 에러를 일으킨것으로 보인다.
 간소화된 파라미터에 알맞게 메소드를 수정하자 톰캣이 작동하기 시작했다.
 하지만 post통신으로 signup에 대한 json을 넣었을때 제대로 작동하지 않았다. 적합한 객체값이 아니라는 로그문이 보인다.
 email의 크기가 최대 15 user@email.com 은 14문제될것이 없는듯 하다.
 하 찾았다 기존에 쓰던 account 테이블명을 accounts로 변경한 걸 잊고 있었다.
 새로 변경된 테이블명에 적합하게 변경하여 새로운 account가 생성되는 것을 확인할 수 있었다.
 그리고 signuprequest에 @Data를 사용하면 Type definition error 발생한다. @Data 사용을 지양하는 것이 좋겠다.
 기존의 @Data를 변경하는 것이 다음 작업이다. 모두 변경하였다. 이제 post통신으로 로그인이 되는지
 확인하고 front를 만들 것이다. loginrequest 객체가 생성되지 않는다. 뭐가 문제일까 junit을 한번
 활용해 보고 싶은데 잘 알지 못하니깐 손이 잘 안가게 된다. 일단 junit 부터 살펴봐야겠다.
 okky를 살펴보니깐 junit이 과대평가됬다는 글이 많다. 단위 테스트보다 통합 테스트를 우선시 하며
 테스트를 위한 시간과 자원을 사용해야하니 불편한 점이 많다는 것이다. 어느정도만 알아두고
 필요할때가 오면 그때 사용하기로 결정했다.
 