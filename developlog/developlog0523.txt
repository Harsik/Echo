개발 11일차
편도선 붓기가 오늘도 가라앉지 않는다. 침을 삼킬때마다 괴롭다. 그것떔에 그런지는 몰라도 의욕이 많이 떨어져있다.
잠깐만 잠깐만 더 쉬자. 커피가 몸에 들어오니 좀 살 것 같다. 정신이 또렸해진다.
내가 단순히 jpa에 대한 이해가 부족했다고 생각이 든다. 아직도 디비 관계 설정이 망설여 진다. 
뭐가 더 나은 관계인가? 하나씩 되짚어 보자.
1.account 다대다 fileinfo, 2.account 일대일 profile 일대일 fileinfo 3.account 일대일 profile 다대다 fileinfo
1번은 관계된 테이블이 줄어든다. fileinfo에 대한 속성이 하나 늘어난다.
2번은 profile이 두개의 부모테이블을 갖게 되면서 좋지 않는 관계형이 되어 버렸다.
3번은 profile 즉 아바타가 하나일 텐데 굳지 다대다를 할 필요가 없다.
1번으로 진행하자. 진행 도중에 생각났다. jpa는 만능이 아니기 때문에 내가 찾는 데이터가 있을 때와 없을 때 function을
따로 만들어야 한다. 구상하자면 front에서 profile에 edit 버튼을 누르면 fetch로 post 통신하게 되고
controller에서 이를 받아 service를 실행하고 response를 반환한다. 여기서 service는 읽어온 parameter로 account를
불러온다. 그리고 fileinfo 객체를 생성후 account.getFileInfo().add(fileinfo), fileinfo.getAccount().add(account)
accountrepository.save(account)이면 될 것이다. 아바타를 처음 저장 하는 경우에는 문제 없으나 두번째로 수정 할때
이 정도로는 안된다. 수정 하는 function도 작성해야 한다. 그리고 avatar파일이 있는지 없지도 체크해줄 것도 필요하다.
하나의 메소드 안에 체크, 생성, 수정 해야할 수 있다. 경우에 따라 간편하게 하기 위해 체크, 삭제, 생성 하는 경우도 있다.
repository를 통해 다대다 관계에서 원하는 것을 찾을려고 할 때 jointable에서 찾아야 되는 것인가 아닌가? 난 이 경우가
궁금하다. 왜 대부분의 테이블 관계가 다대일 혹은 일대다가 되는지 알 것 같다. 다대다로 account 객체를 repository에서
받아서 찾을려고 했더니 set<account>를 파라미터로 받는다. 다대일은 다대다 보다 덜 복잡하고, 일대일 보다 더 유연하다.
적당히 중간지점이기 때문에 편리하다. 그래서 file 다대일 account를 만들려고 한다. 만들고 저장 하는 메소드를 만들어
실행 했는데 생각 외로 잘 됬다. 한가지 문제가 있다면 새로운 튜플을 생성한다는 건데 찾는 파라미터를 account에서 accountid로
변경해봐야겠다. account문제가 아니였다. fileinfo객체에 setaccount후 repository로 save하면 fileinfo가 하나 더 추가가 된다.
어떻게 알고리즘을 개선해서 최대한 간단하게 만들고 싶은데 어떻게 해야할까? 일단 저장은 되니 이걸 프로파일 불러오는 단계에서
아바타이미지를 불러와보자. 하 목표를 세우고 3일 지나야 드디어 아바타 이미지를 불러왔다. 중간에 다른길로 빠져서 시간 좀
잡아 먹긴 했지만 어쨋든 됬긴 됬다. 이제 남은 가지를 쳐낼차례다. 그전에 이글의 첫줄을 보면서 아까 병원 갔던게 생각나 적는다.
적으면서 이걸 왜 적지 하는 생각이 들지만 내가 적고 싶으니 적는다. 난 단순히 환절기 감기로 인해 편도가 부은줄 알았다.
편도가 부으면서 몸살기가 있었으니깐 하지만 몸살기는 배탈이 나면서 생긴거였고 편도는 다른 원인해 의해 생긴 것 이였다.
그 망할 냉동 만두가 내 목과 위장을 건들면서 염증을 만들어 낸것이다. 내 편도는 염증이 생겨 부은 것이다. 지금 냉장고 안에
있는 만두는 두번 다시 먹지 않으리. 일단 가장 신경쓰이는건 아바타를 업로드 할시 fileinfo가 update가 아닌 create이 되고
있는게 문제다. service에서 repository를 다루는 데에 문제가 있는 것 같다. 이 방법을 안지가 얼마 되지 않아 미숙한 점이 
많다. 빨리 가서 고치자. @builder를 사용해서 생성자를 반환할려하는데 해보니깐 이거 @manytoone과 같은 persistent 
어노테이션이 호환이 안되는지 잘 안된다. 원복해서 다시 문제되는 부분을 해결할려고 했으나 너무 시간을 잡아 먹는다.
풀리지도 않고 내 체력과 정신력만 닳아 없어진다. 정리를 다시 해보자. account와 fileinfo가 서로 일대다 관계로 
그렇다면 fileinfo를 accountid로 불러왔을때 배열 혹은 리스트로 반환되는가? 이걸 알고 싶다. 
선택지가 나뉜다. fileinfo를 리스트로 받아 그중에 purpost가 avatar인 객체를 찾아 반환하는 것과
account 혹은 profile과 일대일 관계를 가지는 새로운 테이블을 생성하여 사용하던가
그것도 다 필요 없으면 그냥 profile에 새로운 컬럼을 추가하고 downloaduri을 추가하면 된다.
첫번째는 난이도가 높지만 나중을 생각하면 도움이 될지도 모르고, 두번째는 세번째와 별반 다를 없는 난이도이다.
음 첫번째를 시도해보고 오늘 내로 안되면 내일 세번째 방법으로 일단 가보자.

