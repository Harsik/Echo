개발 18일차
어찌 4,5,6일이 없냐 물으면 4,5일은 업무지원으로 6일은 현충일이다. 휴일을 보냈지만 여기저기 걸어다니면서
보내서 좀 피곤하다. 집에 도착했을 땐 10시였다. 별거 없으니 내가 앞으로 할일에 대해 정리하자. 좀 의욕이 떨어지긴 하지만
파일 다운로드 구현이 성공하였음으로 나는 다운로드 진행을 나타내는 무언가와 다운로드 폴더를 여는 버튼을 구현할 생각이다.
이 부분에 대해 끝났다면 option 기능을 좀 더 추가할 예정이다. option에 추가할 것이 떠 올라 잊기 전에 적어놓을 려고 한다.
버전 정보 적기 그리고 최신 버전인지 확인 기능 및 업데이트 기능 업데이트가 좀 어려워 보기긴 하지만 될 수 있는 대로 구현해
볼 것이다. this.showProgress is not a function 전에 봤던건데 어떻게 해결했는지 기억나지 않는다. 분명 method내에 선언했고
this.도 앞에 붙였는데 이런게 왜 뜰까? .on 바인드에 넣었던 것들이 안되는 건데 javascript 버전이 좀 다르긴 해도 적용은 될텐데
무엇이 문제인 걸까 vue 안에 초기에 선언했던 것을 인식하지 못한다. 찾아보니 http에 대한 request 랑 npm에 있는 request랑 서로
다른 것인데 내가 같은 것으로 착각해서 이런 문제가 생긴 것 같다. npm로 다운로드해보고 시도해보자. 아 이런 간단한 것인데
.then을 이용하면 promise가 끝나고 작동할 꺼 아닌가 어렵게 고민했다. then안에 isdownload를 변경함에 따라 progress circle을
나타났다 사라졌다 하게 만들면 된다. 다음 다운로드 폴더를 한번 열 수 있게 해보자. 어 언제부터 url이 변경 되어 있었지?
테스트를 다시 해봐야한다. 해결 했을 거라 생각했던 문제가 다시 수면위로 떠오른다. method를 따로 구현해 return promise하는
방법은 Cannot read property 'download' of undefined라는 에러 때문에 안된다. 뭐가 문제인지 잘 모르겠다. 어려방면으로 알아보고
노력했지만 안된다. method 안이 아니라 밖 sciprt에 선언해 사용해보기로 하였다. 다운로드는 되나 그 이후 작업인 then이후가 작동하지 않는다.
이제 이해가 됬다. new promise 선언 시 resolve와 reject를 만드는데 resolve를 작성하지 않을 시 promise에 대한 응답이 없는 것으로 
작동하여 then으로 넘어가지 않앗던 것이다. 아마 마찬가지로 reject를 작성하지 않을 면 catch를 통한 오류 출력도 되지 않을 것이다.
내가 promise에 대한 이해가 부족했었다. 이유는 모르지만 promise안에서는 data에 선언한 변수들이 인식되지 않는 것 같다. 이 vue
파일에 대한 변수들이라 this.를 사용할정도로 private한 것이라 그런 것 같다. method 밖에 download 함수를 선언한 것 처럼 
다른 변수들로 data 밖에 선언해야 사용 가능한 것으로 보인다. 밖에다 선언했더니 컴포넌트 안에 v-if가 파라미터로 받지 못하는 건지
never used라고 뜬다. 상황이 진전되지 않는다. 어째서 promise 안에서는 vue 인스턴스의 데이터를 쓰지 못하는 가 어느 글에서는
var self = this로 vue 인스턴스를 불러 올 수 있다 하지만 시도해봐도 별 효과가 없다. 화살표 함수를 사용하면 접근한다는 것도
도움되지 않는다. 문제가 해결하기에 너무 어렵다. 할 수 있는 것만 하고 넘어가기로 하였다. 전에 해둔게 잇어서 테마를 변경하는
것은 별 문제가 되지 않았다. 문제는 이 설정들을 localstorage에 저장하고 불러와 져야 한다는 것이다. 하지만 불러올때 true를 
boolean으로 인식하지 않는지 Invalid prop: type check failed for prop "dark". Expected Boolean, got String with value "true".
에러가 발생한다. 변수에 타입을 선언해 주는 let a: boolean으로 선언해 봤지만 .ts file에만 가능하다는 이상한 오류가 덧붙여 온다.
따로 script 파일을 만들 수도 있겠지만 지금은 임시적인 처리로 true라는 문자열이면 isDark=true를 입력하는 조건문을 만들었다.
이걸로 문제없이 진행이 된다. 어플 버전 관리 문제는 내가 지금 풀 것이 아니라는 생각이 든다. 이 문제를 어떻게 해결을 해야할 지
멀고 막막하다. 버전 정보만 표기하자. 다음 구현하고 싶은 기능 자동 로그인 기능이다. 옵션에서 이 기능을 활성화 하면 Login 페이지에서
이메일과 비밀번호를 입력하지 않고 바로 로그인 하게 만드는 것이다. 이것 또한 어려가지 고려점이 많다. 첫째로 이메일만 저장하면
패스워드는 어떻게 처리할 것인가? 패스워드도 같이 저장하는건 제일 위험한 행위이고, 부가적인 절차가 더 많이 필요하다. 둘째로 
그 절차를 어떻게 만들 것인가 이다. 여기에 대해서는 다른 어플은 어떤식으로 구현했는가 알아볼 필요가 있다. 찾다보니 꽤 괜찬은 
방법이 떠올랐다. 바로 로그아웃 시 토큰을 지우는 작업을 하지 않는 것이다. 그러면 앱 실행 시 저장되 있는 토큰으로 데이터에 접근하거나
ui를 통제하면 될 것이다. 조건을 정리 하자면 자동 로그인을 판별하는 변수를 isAutoLogin이라 하면 처음 앱을 실행 시 isAutoLogin이
true일 경우 accessToken을 찾아 이것이 null이 아니면 isAuthencation을 true로 null이면 isAuthencation을 fail로 isAutoLogin이
false일 경우 아무것도 하지 않는다. logout 시에는 특별히 할 것이 없다.
다음에 앱에 접근시 자동로그인 설정 했으면서 logout 처리를 하지 않았다면 accessToken이 그대로 있으므로 isAuthencation이 true가
되면서 자동로그인 처리가 될 것이다. 테스트 할것을 적자. 로그인 상태에서 자동로그인 설정 하고 껏다 킬시 자동로그인 처리가 되는지,
자동로그인 설정하고 로그 아웃 했을 떄 껏다 킬시 자동로그인 처리가 되지 않는지, 그 다음에서 바로 로그인 하고 껏다 킬시 자동 로그인
처리가 되는지 자동로그인 설정이 남아있는것을 확인, 그 다음 자동로그인 설정을 끄고 로그 아웃 후 자동로그인 처리가 되지 않는지 확인
하면 될듯하다. 그리 어려운 작업이 아닌지 별 문제 없이 제대로 작동한다. 
오늘 남은 시간 동안은 내가 잠깐 멈췄던 download progress 기능을 다시 해보는 걸로 할려 한다. 내가 했던 모든 시도들이 실패로 돌아갔다.
그래도 조건 건진게 있다면 readablestatus와 readablestream으로 reponse가 갈라진다는 건데 readablestatus는 정상적으로 파일이
다운되지만 다른하나는 그렇지 못하다. 아니다 그런것 같지도 않다. 파면 팔수록 헷갈리기만 하고 진전이 없다. 아뿔사 여태까지 몰랐다니
다른 문제가 있었다. 파일은 다운 되나 실제로 서버에 저장되 있는 파일이 다운되는 것이 아니였다. 결국 다운로드 문제가 원점으로 돌아갔다.
오늘은 더 무언가 하는게 의미가 없을 것 같다. 다시 다운로드 부터 탐색해야한다. 다음주에 다시 도전해보자.