개발 10일차
수요일 되니깐 피곤한 것 같다. 아니면 그냥 목이 아퍼서 그런 거일지도 숨 쉴 때 마다 편도가 느껴진다.
꿈도 이상하고 나와 사이가 안좋았던 고등학교 쓰레기가 지역 쓰레기들이 모인 쓰레기 같은 건물에 내 이름이 
적힌 명찰을 달고 교화 받는 듯한 느낌으로 살고 있고 뭐 기타 등등 더 이상 얘기 하고 싶진 않다. 어차피 꿈이니
어제 게임에서 이기고 지는게 반복되는데 마지막 내리진 2판이 좀 아쉽다. 그것 때문에 잠을 좀 못자서 그런가
사설이 길었다 여기까지 프로파일 작업에 대한 마무리를 할려고 한다. 어제 문제점은 프로파일을 찾을려고 
account에서 찾을려고 했다가 에러가 났다. 지금 생각해보면 profilerepository에서 profile의 account id를 
찾으면 되는 것이다. 자꾸 의욕이 없어서 정리하지 않고 해볼려고 하니 잘 안된다. 넣지 못할 때 넣고 될 되로
되란 식으로 구겨져 있는 것 같다. 일단 정리 하자 그리고 진행하자. 일단 프로파일 테이블에 accountid 가 notnull로
설정하자. 설정 끝 처음 프로파일을 불러오는데 profile이 없어 account에서 불러 오지 못하니 에러처리에 대한
메소드를 만들던가 아니면 에러가 나지 않게 해야한다. 저번에는 account와 profile은 사실상 하나로 볼 수 있어
1:1관계로 만들었다. account 생성시 profile을 만들 도록 하였다. 좋아 profile은 그 방법이 어울린다. 
일단 profile을 생성하자. 좋아 생성해서 front에서 불러와지는 것까지 확인했다. 이제 수정방법이다.
프로파일이 계정 생성 시 자동으로 만들어 진다면 수정도 별 다를께 없다. 좋아 여기까지는 제대로 작동한다.
이제 아바타 차례다. 좋아 기능 구현에 대한 정리를 하자. dbfile이라는 엔티티를 만들고 아 그전에 업로드 할 파일을
db에 저장할 건지 서버에 저장 할 건지 정하지 않았다. 이걸 헷갈려서 작업이 딴데로 새나갔었다. db에 저장하는 것과
서버에 저장하는 것이 어떤 차이점을 가지고 있는지 모르겠다. 무엇이 더 효율적이고 좋은 것인가? 
https://okky.kr/article/181080에서 적절한 답변이 나와있다. 결론적으로 말하면 서버에 저장하는 것이 더 낫다는 것이다.
기존에 했던 작업을 다시하고 업로드 테스트를 시작하였다. 아 그전에 프론트에서 진짜 업로드가 가능한지 테스트해야한다.
일단 POST맨을 통한 테스트는 성공이다. 그러면 프론트에서 포스트맨에서 했던 테스트를 해야한다. 
the request was rejected because no multipart boundary was found 뭔뜻일까?? 왜안되는거지 
header에 contenttype이 formdata인데 file만 던져놔서 그런것 같다. post맨으로 binary으로 던져보니 동일한 오류가 발생한다.
밥먹고 나서 하자 배가 아프다. 아 뭐지 form 을 넣어도 동일한 오류가 발생한다. 허탈하게 됬다. 거꾸로 폼이 아닌 것을 보내는 방식으로
헤더를 지우고 폼에 파일을 넣고 보냈더니 됬다. 아마 contenttype이 문제가 있었던것 같은데 정확히 뭔지는 찾아봐야겠다. 
contenttype에 boundary를 추가를 해야 한다고 한다. fetch api가 hearder에 contenttype이 없을 수 자동으로 multipart와 boundary를 
추가한다고 한다. 도움이 됬던 웹주소를 남긴다. https://stackoverflow.com/questions/36067767/how-do-i-upload-a-file-with-the-js-fetch-api
이 다음은 filedownloaduri를 저장할 수 있는 테이블을 만들고 관계를 설정하는 일이다. 다시 정리 fileinfo라는 엔티티가 filedownloaduri 및
다른 정보들을 저장 할 것이다. profile과 다대다 관계를 가지고 있으며 아바타 이미지의 filedownloaduri를 가져올 것이다. 
front에서 아바타 업로드 시 file 저장 메소드에 따라 서버에 파일이 저장이 되고 email 파라미터를 읽어 email을 확인 후 accountid로
profile을 가져올 것이다. profile에서 profile_files 테이블에서 profileid에 해당하는 튜플이 있는지 확인하고
있으면 기존것에서 fileinfo를 수정하는 작업을 없으면 그냥 새로운 fileinfo를 생성하는 작업을 할 것이다.
뭔가 지저분 해보이고 맘에 안드는 구조지면 일단 해보고 수정하는 방식으로 가보자. 하다 보니깐 profile fileinfo 관계가 
맘에 안든다 다대다가 아닌 일대일로 바꿔야 하나? collection 구조로 맞추어 저장하는 방식을 채택하고 진행하고 있는데
java.lang.UnsupportedOperationException가 뜬다. 가장 좋은 사이트는 https://stackoverflow.com/questions/2887590/unsupportedoperationexception-on-collection
인데 지금으로써는 해결방법이 딱히 보이지 않는다. callicoder에서 일대일 맵핑 시 주의사항에 대해서 적어 놨다.
꼭 참고 하자. 
