개발 26일차
어느덧 26일차 가끔은 진자 26일이나 꾸준히 진행했나 궁금해서 옛일지들을 되돌아보기도 한다. 좀 있으면 30일차가 되고
금요일은 이사도 해야하고 워크샵도 가야되고 뭐든 큰일을 앞둔 상태이다. 내가 안드로이드 개발을 발전 시키는 것이 
내 미래에 도움이 될까대한 대답은 물론 된다 겠지만 지금 하고 있는 프로젝트를 진행할까 안드로이드 개발 발전을 할까에 
대한 대답은 아직 아니다. 본론으로 들어와서 웹소켓에 대한 서버 준비와 클라이언트의 준비가 끝난상태이다. 이제
전송 받은 데이터를 가공하고 어떻게 화면에 나타낼 것인가에 대해 고민해야 한다. 그것에 대해 몇가지 생각한게 있다.
카카오톡 같은 경우 대화창을 여러개 생성할 수 있는데 그러면 웹소켓을 여러개 만드는 것인가? 여러개의 포트번호로?
방법을 알고 나중에 구현하고 싶다. 그리고 각 유저들을 아바타들은? 프로파일을 기준으로 만들고 없을 시에는 뭐 랜덤
이미지를 출력해야지. 그리고 나와 다른 사람과 구분되는 말풍선을 사용할 것인가? 이것도 구현대상이다. 당장 구현할
수 없다면 차례대로 구현이다. 일단 대화방은 하나만 구현하고 아바타도 공간만 마련 말풍선도 풍선이 아니라도 좋으니
내가 글을 올리면 그것이 제대로 올라가고 다른 클라이언트도 그것을 볼 수 있어야한다. 몇가지 간단한 처리 후
대략적인 ui를 구성한 후 window unpacking한 client와 run dev로 생성된 client와 websocket통신을 해볼 생각이다.
좋아 유저하나만 서버와 통신이 되고 정상적으로 출력되는 것을 확인한 후에 app build를 시작하였다. build를 하면
unpacking도 같이 된다. unpacking한 app에 아이콘을 다시 바라보는데 감격스런 기분이 들었다. 내가 이 프로젝트에 대한
애정이 아기자기한 그림으로 시각적으로 다가온다고 해야하나 여태까지의 고생이 절로 떠오르는다. 그건 둘째치고 본론으로
넘어오면 현재 dev로 실행 된 어플은 user@email.com으로 로그인 되어있다. 그래서 build된 클라이언트는 새로운 아이디를
생성 후 로그인 할것이다. user2@email.com으로 생성후 로그인 하였다. 둘다 chatting이라는 메뉴로 접속해 보았다.
user2@email.com	user2@email.com joined!
user@email.com	user@email.com joined!
먼저 접속한 user2@email.com에서 user@email.com이 소켓이 접근한 것을 확인 할 수 있었다. 뒤에 추가적으로 
user@email.com	run dev connect
user2@email.com	client connect\
서로 입력한 글들이 채팅창위로 올라오는 것을 확인 할 수 있었다. 
user@email.com	user@email.com left!
user@email.com이 채팅창을 나가는 것까지 확인이 된다. 로그아웃시 채팅창을 나가는 건 아니지만 그래도 구현가능할듯
이제 기초적인 기능 부분을 끝났다. 심화적으로 가기전에 ui를 아주 아주 예쁘게 꾸밀 것이다. 
각 아이디에 아바타 이미지를 등록해 놨다면 그 이미지를 불러 들여 보여줄 것이다.
그리고 글들을 서로 구분 할 수 있도록 내가 올린 글은 색을 입히던가 카카오톡 처럼 오른쪽으로 나타내 지던가 할 것이다.
아바타가 없으면? 기본 이미지를 쓰던가. 지금부터는 front 작업이다. 그전에 심화작업에 대해 적겠다.
1. 로그아웃 혹은 채팅창에서 나갈 시 소켓 연결을 종료해야 한다.
2. RabbitMQ 기술을 적용시켜야한다.
3. 다중 소켓 연결 기술을 적용시켜 여러개의 채팅방을 만들 수 있어야 한다.
4. 채팅창을 나가지 않았다면 글이 남아 있어야한다.
 일단 내 글은 아바타는 표시 할 필요는 없다. 그리고 우측에서 나오게 해야 한다. 현재 채팅이 올라오는 방식은 서버에 챗을 
 보내면 리턴되는 값을 받아 올리는 방식이다. 즉 서버를 거쳐서 돌아와야 글이 올라온다는건데 그 과정에서 서버가 broadcast하는 
 message가 내가 보낸 것인지 아닌지를 판별해서 글이 올라갈 수 있도록 해야한다. message의 sender가 내 email이면 내가 보낸
 message로 판별하고 오른쪽에서 출력하도록 했다. 아바타는 이제 어떻게 해야할까? 서버에서 sender의 email을 통해 아바타의 url을
리턴하는 서비스를 만들 수 있긴 하다. 그렇게 하면 다른 유저들의 아바타 url도 구할 수 있어 아바타를 모두 표시 할 수 있다.
아니면 다른 방법으로 메세지가 올때마다 아바타를 불러 오는 방법도 있다. 전자의 방법으로 아바타의 url를 불러들여 값을 넣었더니
된다. 아바타가 보이니깐 이제 좀 채팅창 같아 보인다. 창이 줄어 들었을때 입력창이 보이면서 예전 글들이 올라가도록 해야하는데
지금 난 안되는 듯? 입력하고 나서 입력칸이 focus되는 기능으로 원하는 기능을 구현 할수 있지 않을까? 그리고 avatarUrl을
통신때마다 보내는 건 서버에도 자원 낭비고 클라이언트에도 자원낭비 같은데 어떻게 해결해야 할까? 
focus은 다행히도 vuejs에서 directive 옵션을 추가하면 이하 컴포넌트에게 v-focus로 focus기능을 제공한다고 한다. main.js
에서 옵션 추가 후 실행 해 봤더니 완벽하다고는 말할 수 없지만 되긴 된다. focus기능 된다. app에서 focus기능을 제공해서 그런지 
항상 스크롤 최하단을 고정하는게 아니라 입력 후 화면이 위로 올려지면 focus 기능으로 다시 내려가는 형태이다. 스크롤 최하단을
스크롤 조작전까지 최 하단으로 고정하고....... 아니다. 그게 아니라 입력 칸은 항상 고정적인 위치를 적용해야 하며 스크롤은 최하단을 
조작전 까지 고정하며 새로 갱신될 시 최하단을 focus되야 하는 것이다. 또다른 도전이 시작될 것 같다. 어떻게 해야 할지 감이 안온다.
잘 모르겠으면 문제점부터 해결하자. 그전에 이게 진짜 문제점인가? 어쩌면 낭비라고 볼 수도 있지만 아바타이미지의 변경 적용이라고도
볼 수가 있다. 문제점이 아닌듯 싶다. 텍스트 입력 카드와 출력 카드를 나누고 style로 overflow-y를 적용시켜 해결해 볼려고 한다.
문제는 아직 크기를 정해 주지 않아서 overflow의 기준이 정해지지 않았다는 점이다. 그리고 그 크기는 화면 크기 sm md 같은 기준을
잡아서 유동적으로 변경할 수 있어야 한다. height 속성을 100%로 주는 방법을 쓰는데 어찌 된 일인지 height가 먹히지 않는다.
여러면에서 시도를 해봐도 동일한 문제가 발생한다. height가 안먹힌다. v-layout에 대한 설정을 바꾸다 보니 column이 좀 먹히는 듯
싶다. 그러나 폭넓이가 조정이 안되서 다시 문제가 생긴다. 레이아웃에 대한 좀 더 자세한 이해가 필요할 것 같다.





 